@using System.Net
@using Blazored.LocalStorage
@using DiscoverUO.Lib.Shared;
@using DiscoverUO.Lib.Shared.Users

@inject ILocalStorageService _localStorage
@inject HttpClient _client
@inject NavigationManager _navigationManager

<h3>DiscoverUO User Login</h3>

<form @onsubmit="HandleLogin">
    <div class="form-group">
        <label for="username">Username:</label>
        <input type="text" class="form-control" id="username" @bind="Username" />
    </div>
    <div class="form-group">
        <label for="password">Password:</label>
        <input type="password" class="form-control" id="password" @bind="Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

    @if( ShowUIResponseMessage )
    {
        <div class="alert alert-danger mt-2">@UIResponseMessage</div>
    }
</form>

@code
{
    public string Username{ get; set; }
    public string Password{ get; set; }
    public string UIResponseMessage { get; set; }
    public bool ShowUIResponseMessage { get; set; }

    public async Task HandleLogin()
    {
        ShowUIResponseMessage = false;

        try
        {
            var httpResponse = await _client.PostAsJsonAsync("https://localhost:7015/api/users/Authenticate", new AuthenticationRequest(Username, Password));

            if (httpResponse.IsSuccessStatusCode)
            {
                var authResponse = httpResponse.Content.ReadFromJsonAsync<AuthenticationResponse>().Result;
                var tokenString = authResponse.Value;

                await _localStorage.SetItemAsync("jwtToken", tokenString );
                _navigationManager.NavigateTo("/dashboard");
            }
            else
            {
                var authResponse = httpResponse.Content.ReadFromJsonAsync<AuthenticationResponse>().Result;
                UIResponseMessage = authResponse.Message;
                ShowUIResponseMessage = true;
            }
        }
        catch (HttpRequestException ex)
        {
            UIResponseMessage = $"An HttpRequest Exception was thrown: {ex.Message}";
            ShowUIResponseMessage = true;
        }
        catch( Exception ex )
        {
            UIResponseMessage = $"An unknown error occurred: {ex.Message}";
            ShowUIResponseMessage = true;
        }
        finally
        {
            StateHasChanged();
        }
    }
}