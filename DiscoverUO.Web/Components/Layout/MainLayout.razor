@inject HttpClient client
@inject ISnackbar snackbar
@inject NavigationManager navManager
@inherits LayoutComponentBase

<MudThemeProvider Theme="UOTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudText Typo="Typo.h4" Align="Align.Center" GutterBottom="true">DiscoverUO |</MudText>
        <MudButton ButtonType="ButtonType.Button" Color="Color.Inherit" OnClick="@AppBarNavToHome">Home</MudButton>

        @if (!UserSession.UserAuthenticated)
        {
            <MudSpacer />
            <MudButton ButtonType="ButtonType.Button" Color="Color.Inherit" OnClick="@AppBarNavToRegister">Register</MudButton>
            <MudIconButton Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" Edge="Edge.End" OnClick="@AppBarNavToSignIn" />
        }
        else
        {
            <MudButton ButtonType="ButtonType.Button" Color="Color.Inherit" OnClick="@AppBarNavToMyServers">My Servers</MudButton>
            <MudButton ButtonType="ButtonType.Button" Color="Color.Inherit" OnClick="@AppBarNavToMyFavorites">My Favorites</MudButton>
            <MudSpacer />
            <MudIconButton ButtonType="ButtonType.Button" Icon="@Icons.Material.Filled.Add" Color="Color.Inherit" Edge="Edge.End" OnClick="@AddServerOnClick" />
            <MudIconButton ButtonType="ButtonType.Button" Icon="@Icons.Material.Filled.Dashboard" Color="Color.Inherit" Edge="Edge.End" OnClick="@AppbarNavToDashboard" />
            <MudIconButton ButtonType="ButtonType.Button" Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" Edge="Edge.End" OnClick="@AppBarSignOut" />
        }
    </MudAppBar>

    <MudMainContent>
        <CascadingValue Value="@UserSession">
            @Body
        </CascadingValue>
    </MudMainContent>
</MudLayout>


@*@<div class="footer">
    <MudText Typo="Typo.h5" Align="Align.Center" Color="Color.Inherit">DiscoverUO &copy 2024 James Glosser</MudText>
</div>*@

@code
{
    private SessionManager UserSession = new SessionManager();

    private void AppBarSignOut()
    {
        UserSession.ConfigureAnonymousSession();
        snackbar.Add("Logout successful! Redirecting to home.", Severity.Success);
        navManager.NavigateTo("/");
        navManager.Refresh(true);
    }

    private void AppBarNavToHome()
    {
        navManager.NavigateTo("/");
    }

    private void AppBarNavToRegister()
    {
        navManager.NavigateTo("/register");
    }

    private void AppBarNavToMyServers()
    {
        navManager.NavigateTo("/servers/myservers");
    }

    private void AppBarNavToMyFavorites()
    {
        navManager.NavigateTo("/favorites/myfavorites");
    }

    private void AppBarNavToSignIn()
    {
        navManager.NavigateTo("/signin");
    }

    private void AddServerOnClick()
    {
        navManager.NavigateTo("servers/public/create");
    }

    private void AppbarNavToDashboard()
    {
        navManager.NavigateTo("/dashboard");
    }

    MudTheme UOTheme = new MudTheme()
    {
         
        Typography = new Typography()
        {
            Default = new Default()
            {
                FontFamily = new[] { "Courier New", "Courier", "monospace" }
            }
        },

        PaletteLight = new PaletteLight
        {
            Primary = "#606060",
            TextPrimary = "#202020",

            Background = "#bebdbc",
            BackgroundGray = "#404040",
            AppbarBackground = "#606060",

            // 797971
        },


        LayoutProperties = new LayoutProperties()
        {
            AppbarHeight = "80px"
        }
    };
}