@inject ILocalStorageService _localStorage
@inject HttpClient _client

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">DiscoverUO</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/servers" Match="NavLinkMatch.All">
                <span class="bi bi-servers-fill-nav-menu" aria-hidden="true"></span> Servers
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/temp" Match="NavLinkMatch.All">
                <span class="bi bi-servers-fill-nav-menu" aria-hidden="true"></span> Temp
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    public DashboardRequest DashboardData{ get; set; }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if( !firstRender )
        {
            DashboardData = await DataManager.GetDashboard(_client, _localStorage);
            StateHasChanged();
        }
    }
}
