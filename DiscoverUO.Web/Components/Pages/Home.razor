@inject HttpClient client
@page "/"

<PageTitle>Home</PageTitle>

<MudText Style="font-size: 64px" Align="Align.Center" Color="Color.Primary" GutterBottom="true">Welcome to DiscoverUO!</MudText>
<MudContainer MaxWidth="MaxWidth.Medium">
    @if( UserSession.PublicServers.Count > 0 )
    {
        <PublicServersComponent/>
    }
    else
    {
        <MudText Typo="Typo.h3" Align="Align.Center" Color="Color.Primary" GutterBottom="true">The public serverlist is empty.</MudText>
    }
</MudContainer>
@code
{
    [CascadingParameter]
    public SessionManager UserSession{ get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var updatePublicServers = UserSession.GetPublicServersList(client);
        var updateOwnedServers = UserSession.GetUserOwnedServers(client);

        if (updatePublicServers.Success)
        {
            Console.WriteLine($"Public serverlist loaded: {UserSession.PublicServers.Count}");
        }
        if (updateOwnedServers.Success)
        {
            Console.WriteLine($"User owned servers loaded: {UserSession.UserOwnedServers.Count}");
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if( !firstRender )
        {
            var updatePublicServers = UserSession.GetPublicServersList(client);
            var updateOwnedServers = UserSession.GetUserOwnedServers(client);

            if (updatePublicServers.Success)
            {
                Console.WriteLine($"Public serverlist loaded: {UserSession.PublicServers.Count}");
            }
            if (updateOwnedServers.Success)
            {
                Console.WriteLine($"User owned servers loaded: {UserSession.UserOwnedServers.Count}");
            }
        }
    }
}
