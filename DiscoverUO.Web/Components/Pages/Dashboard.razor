@page "/dashboard"
@using DiscoverUO.Lib.Shared
@using DiscoverUO.Lib.Shared.Favorites
@using DiscoverUO.Lib.Shared.Servers
@using DiscoverUO.Lib.Shared.Users
@using DiscoverUO.Web.Components.Data
@using System.Net.Http.Headers
@inject ILocalStorageService _localStorage
@inject NavigationManager _navManager
@inject HttpClient _client

<PageTitle>Dashboard</PageTitle>

<MudContainer>
    @if (DashboardData != null)
    {
        <MudPaper>
            <MudItem xs="12" Class="mt-4 pa-4 mud-theme-secondary">
                <MudCard>
                    <MudCardHeader>
                        <MudText Typo="Typo.h1">Welcome Back, @DashboardData.UserDisplayName</MudText>
                    </MudCardHeader>
                
                    @if (DashboardData.UserAvatar != null)
                    {
                        <MudCardMedia Image="@DashboardData.UserAvatar" />
                    }

                    <MudCardContent>
                        <MudText Typo="Typo.h5">User Email: @DashboardData.Email</MudText>
                        <MudText Typo="Typo.h5">User Creation Date: @DashboardData.CreationDate</MudText>
                        <MudText Typo="Typo.h5">User Remaining Votes : @DashboardData.DailyVotesRemaining</MudText>
                    </MudCardContent>
                    <MudCardContent>
                        <MudText Typo="Typo.h5">User Biography:</MudText>
                        <MudText Typo="Typo.h5">@DashboardData.UserBiography</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudSpacer />
                        <MudButton Variant="Variant.Text" Color="Color.Primary">Favorites</MudButton>
                        <MudSpacer/>
                        <MudButton Variant="Variant.Text" Color="Color.Primary">My Servers</MudButton>
                        <MudSpacer />
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudPaper>
    }
</MudContainer>

@code
{
    public DashboardData DashboardData { get; set; }
    private bool showAvatar;

    protected async override Task OnInitializedAsync()
    {
        if (DashboardData != null)
            return;

        DashboardData = await DataManager.GetDashboard(_client, _localStorage);

        if (string.IsNullOrEmpty(DashboardData.UserAvatar))
            showAvatar = false;

        StateHasChanged();
    }
}