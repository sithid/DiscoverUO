@page "/dashboard"
@using DiscoverUO.Lib.Shared
@using DiscoverUO.Lib.DTOs.Users
@using System.Net.Http.Headers

@inject ILocalStorageService _localStorage
@inject HttpClient _client

@if (dashboard == null)
{
    @if (ShowErrorMessage)
    {
        <p><em>Error: @ErrorMessage</em></p>
    }
    else
    {
        <p><em>Loading...</em></p>
    }
}
else
{
    <h3>Welcome to DiscoverUO!</h3>
    <div>
        <label>Username: @dashboard?.Username</label>
    </div>
}

@code
{
    public string ErrorMessage { get; set; }
    public bool ShowErrorMessage { get; set; }

    private DashboardDto dashboard { get; set; } = default!;

    protected async override Task OnInitializedAsync()
    {
        var token = await _localStorage.GetItemAsync<string>("jwtToken");

        _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

        var response = _client.GetAsync("https://localhost:7015/api/users/view/dashboard").Result;

        try
        {
            var dashboardResponse = response.Content.ReadFromJsonAsync<DashboardResponse>().Result;

            if (response.IsSuccessStatusCode)
            {
                dashboard = dashboardResponse.Data;

                StateHasChanged();
            }
            else
            {
                ErrorMessage = response.StatusCode.ToString();
                ShowErrorMessage = true;
            }

        }
        catch(Exception ex)
        {
            Console.WriteLine($"User dashboard is null: {ex}");
        }
    }
}